// Generated by Dagger (https://dagger.dev).
package com.crisav2.mobiletest3.posts.view;

import com.crisav2.mobiletest3.posts.Posts;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PostsFragment_MembersInjector implements MembersInjector<PostsFragment> {
  private final Provider<Posts.Presenter> presenterProvider;

  public PostsFragment_MembersInjector(Provider<Posts.Presenter> presenterProvider) {
    this.presenterProvider = presenterProvider;
  }

  public static MembersInjector<PostsFragment> create(Provider<Posts.Presenter> presenterProvider) {
    return new PostsFragment_MembersInjector(presenterProvider);
  }

  @Override
  public void injectMembers(PostsFragment instance) {
    injectPresenter(instance, presenterProvider.get());
  }

  @InjectedFieldSignature("com.crisav2.mobiletest3.posts.view.PostsFragment.presenter")
  public static void injectPresenter(PostsFragment instance, Posts.Presenter presenter) {
    instance.presenter = presenter;
  }
}
